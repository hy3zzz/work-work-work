{"ast":null,"code":"var _jsxFileName = \"/Users/sinhyewon/Library/Mobile Documents/com~apple~CloudDocs/portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\nimport './App.css';\nimport ImageWithCaption from './ImageWithCaption';\nimport NavBar from './NavBar';\nimport About from './About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagesData = [{\n  src: \"/img/new_isc.png\",\n  title: 'new_ISC=\"ITCT(20th)\"',\n  year: \"2022\",\n  tags: [\"identity\"],\n  id: \"1\"\n}, {\n  src: \"/img/makecornpop.gif\",\n  title: \"Make Corn Pop!\",\n  year: \"2022\",\n  tags: [\"website\"],\n  id: \"2\"\n}, {\n  src: \"/img/getrelaxed.gif\",\n  title: \"Refresh and Get Your Own Landscape\",\n  year: \"2022\",\n  tags: [\"website\"],\n  id: \"3\"\n}, {\n  src: \"/img/fcm.gif\",\n  title: \"Fridge Cliche Mart\",\n  year: \"2023\",\n  tags: [\"graphic\", \"website\"],\n  id: \"4\"\n}, {\n  src: \"/img/finilsan.gif\",\n  title: \"일산: 인 픽션\",\n  year: \"2021\",\n  tags: [\"graphic\", \"motion\"],\n  id: \"4\"\n}];\n\n// function App() {\n//   const [images] = useState(imagesData);\n//   const [hoverState, setHoverState] = useState(Array(imagesData.length).fill(false));\n\n//   const [selectedTag, setSelectedTag] = useState(null);\n\n//   const handleTagClick = (tag) => {\n//     setSelectedTag(tag);\n//   };\n\n//   const filteredImages = selectedTag\n//     ? images.filter((image) => image.tags.includes(selectedTag))\n//     : images;\n\n//   const breakpointColumnsObj = {\n//     default: 3,\n//     1100: 3,\n//     700: 2,\n//     500: 1\n//   };\n\n//   const handleMouseEnter = (index) => {\n//     const newHoverState = [...hoverState];\n//     newHoverState[index] = true;\n//     setHoverState(newHoverState);\n//   };\n\n//   const handleMouseLeave = (index) => {\n//     const newHoverState = [...hoverState];\n//     newHoverState[index] = false;\n//     setHoverState(newHoverState);\n//   };\n\n//   const handleToggleHover = () => {\n//     const newHoverState = hoverState.map((hovered) => !hovered);\n//     setHoverState(newHoverState);\n//   };\n\n//   const Gallery = () => (\n//     <Masonry\n//       breakpointCols={breakpointColumnsObj}\n//       className=\"masonry-grid\"\n//       columnClassName=\"masonry-grid_column\"\n//     >\n//       {filteredImages.map(({ src, alt, title, year, tags, id }, index) => (\n//         <ImageWithCaption\n//           key={id}\n//           src={src}\n//           alt={alt}\n//           title={title}\n//           year={year}\n//           tags={tags}\n//           onTagClick={handleTagClick}\n//           isHovered={hoverState[index]}\n//           onMouseEnter={() => handleMouseEnter(index)}\n//           onMouseLeave={() => handleMouseLeave(index)}\n//         />\n//       ))}\n//     </Masonry>\n//   );\n\n//   return (\n//     <Router>\n//       <NavBar onToggleHover={handleToggleHover} />\n//       <Routes>\n//         <Route path=\"/\" element={<Gallery />} />\n//         <Route path=\"/about\" element={<About />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\nfunction App() {\n  _s();\n  const [selectedTag, setSelectedTag] = useState(null);\n  const handleTagClick = tag => {\n    setSelectedTag(tag);\n  };\n  const filteredImages = selectedTag ? imagesData.filter(image => image.tags.includes(selectedTag)) : imagesData;\n  const breakpointColumnsObj = {\n    default: 3,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Masonry, {\n    breakpointCols: breakpointColumnsObj,\n    className: \"masonry-grid\",\n    columnClassName: \"masonry-grid_column\",\n    children: filteredImages.map(_ref => {\n      let {\n        src,\n        alt,\n        title,\n        year,\n        tags,\n        id\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(ImageWithCaption, {\n        src: src,\n        alt: alt,\n        title: title,\n        year: year,\n        tags: tags,\n        onTagClick: handleTagClick\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CkVuf3cGeg7aNypXq6cMJG5ZDz8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Masonry","ImageWithCaption","NavBar","About","jsxDEV","_jsxDEV","imagesData","src","title","year","tags","id","App","_s","selectedTag","setSelectedTag","handleTagClick","tag","filteredImages","filter","image","includes","breakpointColumnsObj","default","breakpointCols","className","columnClassName","children","map","_ref","alt","onTagClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sinhyewon/Library/Mobile Documents/com~apple~CloudDocs/portfolio/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\nimport './App.css';\nimport ImageWithCaption from './ImageWithCaption'; \nimport NavBar from './NavBar';\nimport About from './About';\n\nconst imagesData = [\n  {src: \"/img/new_isc.png\",\n  title: 'new_ISC=\"ITCT(20th)\"',\n  year: \"2022\",\n  tags: [\"identity\"],\n  id: \"1\"},\n\n  {src: \"/img/makecornpop.gif\",\n  title: \"Make Corn Pop!\",\n  year: \"2022\",\n  tags: [\"website\"],\n  id: \"2\"},\n\n  {src: \"/img/getrelaxed.gif\",\n  title: \"Refresh and Get Your Own Landscape\",\n  year: \"2022\",\n  tags: [\"website\"],\n  id: \"3\"},\n\n  {src: \"/img/fcm.gif\",\n  title: \"Fridge Cliche Mart\",\n  year: \"2023\",\n  tags: [\"graphic\", \"website\"],\n  id: \"4\"},\n\n  {src: \"/img/finilsan.gif\",\n  title: \"일산: 인 픽션\",\n  year: \"2021\",\n  tags: [\"graphic\", \"motion\"],\n  id: \"4\"},\n];\n\n// function App() {\n//   const [images] = useState(imagesData);\n//   const [hoverState, setHoverState] = useState(Array(imagesData.length).fill(false));\n\n//   const [selectedTag, setSelectedTag] = useState(null);\n\n//   const handleTagClick = (tag) => {\n//     setSelectedTag(tag);\n//   };\n\n//   const filteredImages = selectedTag\n//     ? images.filter((image) => image.tags.includes(selectedTag))\n//     : images;\n\n//   const breakpointColumnsObj = {\n//     default: 3,\n//     1100: 3,\n//     700: 2,\n//     500: 1\n//   };\n\n//   const handleMouseEnter = (index) => {\n//     const newHoverState = [...hoverState];\n//     newHoverState[index] = true;\n//     setHoverState(newHoverState);\n//   };\n\n//   const handleMouseLeave = (index) => {\n//     const newHoverState = [...hoverState];\n//     newHoverState[index] = false;\n//     setHoverState(newHoverState);\n//   };\n\n//   const handleToggleHover = () => {\n//     const newHoverState = hoverState.map((hovered) => !hovered);\n//     setHoverState(newHoverState);\n//   };\n\n//   const Gallery = () => (\n//     <Masonry\n//       breakpointCols={breakpointColumnsObj}\n//       className=\"masonry-grid\"\n//       columnClassName=\"masonry-grid_column\"\n//     >\n//       {filteredImages.map(({ src, alt, title, year, tags, id }, index) => (\n//         <ImageWithCaption\n//           key={id}\n//           src={src}\n//           alt={alt}\n//           title={title}\n//           year={year}\n//           tags={tags}\n//           onTagClick={handleTagClick}\n//           isHovered={hoverState[index]}\n//           onMouseEnter={() => handleMouseEnter(index)}\n//           onMouseLeave={() => handleMouseLeave(index)}\n//         />\n//       ))}\n//     </Masonry>\n//   );\n\n//   return (\n//     <Router>\n//       <NavBar onToggleHover={handleToggleHover} />\n//       <Routes>\n//         <Route path=\"/\" element={<Gallery />} />\n//         <Route path=\"/about\" element={<About />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\nfunction App() {\n  const [selectedTag, setSelectedTag] = useState(null);\n\n  const handleTagClick = (tag) => {\n    setSelectedTag(tag);\n  };\n\n  const filteredImages = selectedTag\n    ? imagesData.filter((image) => image.tags.includes(selectedTag))\n    : imagesData;\n\n  const breakpointColumnsObj = {\n    default: 3,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n\n  return (\n    <Masonry\n      breakpointCols={breakpointColumnsObj}\n      className=\"masonry-grid\"\n      columnClassName=\"masonry-grid_column\"\n    >\n      {filteredImages.map(({ src, alt, title, year, tags, id }) => (\n        <ImageWithCaption\n          key={id}\n          src={src}\n          alt={alt}\n          title={title}\n          year={year}\n          tags={tags}\n          onTagClick={handleTagClick}\n        />\n      ))}\n    </Masonry>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}